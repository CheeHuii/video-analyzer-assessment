syntax = "proto3";
package genai.chat;

import "common.proto";
import "google/protobuf/timestamp.proto";

option java_package = "genai.chat";
option go_package = "genai/chat;chat";

service ChatService {
  // Bi-directional stream: client sends messages, server replies with streamed responses
  rpc StreamChat(stream ChatMessage) returns (stream ChatResponse);

  // Non-streaming simple send
  rpc SendMessage(ChatMessage) returns (ChatAck);

  // Retrieve history (pagination)
  rpc GetHistory(HistoryRequest) returns (HistoryResponse);
}

message ChatMessage {
  string message_id = 1;
  string user_id = 2;
  string text = 3;
  repeated string attachments = 4; // file paths
  google.protobuf.Timestamp created_at = 5;
  // optional: if the message references a task
  string referenced_task_id = 6;
}

message ChatResponse {
  string message_id = 1; // id of assistant response
  string in_reply_to = 2; // original message id
  string text = 3;
  repeated string attachments = 4; // e.g., /artifacts/summary.pdf
  google.protobuf.Timestamp created_at = 5;
  double confidence = 6; // optional confidence for assertions
  bool needs_clarification = 7;
  repeated string clarification_options = 8;
}

message ChatAck {
  bool ok = 1;
  string message = 2;
  string server_timestamp = 3;
}

message HistoryRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message HistoryResponse {
  repeated ChatMessage messages = 1;
  int32 total = 2;
}
